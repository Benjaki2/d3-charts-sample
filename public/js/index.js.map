{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d3/d3.js","index.js","node_modules/evemit/evemit.js","node_modules/spin/spin.js","src/dataFormatter.js","src/dom/Dom.js","src/index.js","src/visualizations/GroupedBarGraph.js","src/visualizations/chart.js","src/visualizations/visualization.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","define","amd",2,"Evemit","events","fn","_E_ctx","once","_E_once","emit","arg1","arg2","arg3","arg4","evs","aLn","ln","ltns","ev",3,"createEl","tag","prop","el","ins","addAnimation","trail","useCssAnimations","pre","animations","sheet","insertRule","vendor","pp","undefined","prefixes","css","obj","def","pos","offsetLeft","offsetTop","offsetParent","getElementsByTagName","styleSheet","defaults","speed","opacity","fps","zIndex","className","Spinner","spin","opts","ep","tp","firstChild","offsetWidth","offsetHeight","ostep","astep","anim","timeout","shadow","height","boxShadow","transformOrigin","borderRadius","seg","hwaccel","animation","val","vml","adj","addRule","grp","coordsize","coordorigin","arcsize",4,"formatData","rowFilters","obese","overWeight","isolateDataSections","obesity","overweight","arra","innerObj","sexType","sex_id","_obj","age_group","sex","metric",5,"_interopRequireDefault","__esModule","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","constructor","writable","configurable","setPrototypeOf","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_evemit","_evemit2","_d","_d2","Dom","_Evemit","getPrototypeOf","visCaseId","_this2","visCase","appendCaseToBody","createHeader","buildToggle","onresize","chartHeader","_this3","btnObese","btnOverweight","buttonCase","onclick","evemit",6,"_visualization","_visualization2","_GroupedBarGraph","_GroupedBarGraph2","_Dom","_Dom2","_dataFormatter","_dataFormatter2","_spin","_spin2","rowfilters","fills","label","xScalekey","xGroupArra","targetID","spinner","visualization","dom","getElementById","updateData","dataType","res","init","toggleButtons","./dataFormatter","./dom/Dom","./visualizations/GroupedBarGraph","./visualizations/visualization",7,"_chart","_chart2","GroupedBarChart","_Chart","_this","chart","outter","inner","main","chartWidth","bar","chartHeight","scales","xAxisScale","./chart",8,"Chart","dimensions","getDimensions",9,"vizCache","Visualization","vis","xScaleKey","visType","caseID","vizCase","setDimensions","renderChart","createLegend","vizType","viz","legend","createScaleY","getMax","createScaleX","createAxis","buildGroups","buildChartOutline","buildBars"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n!function() {\n  var d3 = {\n    version: \"3.5.16\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n},{}],2:[function(require,module,exports){\n/**\n * @name Evemit\n * @description Minimal and fast JavaScript event emitter for Node.js and front-end.\n * @author Nicolas Tallefourtane <dev@nicolab.net>\n * @link https://github.com/Nicolab/evemit\n * @license MIT https://github.com/Nicolab/evemit/blob/master/LICENSE\n */\n;(function() {\n\n  'use strict';\n\n  /**\n   * Evemit\n   *\n   * @constructor\n   * @api public\n   */\n  function Evemit() {\n    this.events = {};\n  }\n\n  /**\n   * Register a new event listener for a given event.\n   *\n   * @param {string}   event      Event name.\n   * @param {function} fn         Callback function (listener).\n   * @param {*}        [context]  Context for function execution.\n   * @return {Evemit} Current instance.\n   * @api public\n   */\n  Evemit.prototype.on = function(event, fn, context) {\n\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n\n    if(context) {\n      fn._E_ctx = context;\n    }\n\n    this.events[event].push(fn);\n\n    return this;\n  };\n\n  /**\n   * Add an event listener that's only called once.\n   *\n   * @param {string}    event      Event name.\n   * @param {function}  fn         Callback function (listener).\n   * @param {*}         [context]  Context for function execution.\n   * @return {Evemit} Current instance.\n   * @api public\n   */\n  Evemit.prototype.once = function(event, fn, context) {\n    fn._E_once = true;\n    return this.on(event, fn, context);\n  };\n\n  /**\n   * Emit an event to all registered event listeners.\n   *\n   * @param  {string} event      Event name.\n   * @param  {*}      [...arg]   One or more arguments to pass to the listeners.\n   * @return {bool} Indication, `true` if at least one listener was executed,\n   * otherwise returns `false`.\n   * @api public\n   */\n  Evemit.prototype.emit = function(event, arg1, arg2, arg3, arg4) {\n\n    var fn, evs, args, aLn;\n\n    if(!this.events[event]) {\n      return false;\n    }\n\n    args = Array.prototype.slice.call(arguments, 1);\n    aLn  = args.length;\n    evs  = this.events[event];\n\n    for(var i = 0, ln = evs.length; i < ln; i++) {\n\n      fn = evs[i];\n\n      if (fn._E_once) {\n        this.off(event, fn);\n      }\n\n      // Function.apply() is a bit slower, so try to do without\n      switch (aLn) {\n        case 0:\n          fn.call(fn._E_ctx);\n          break;\n        case 1:\n          fn.call(fn._E_ctx, arg1);\n          break;\n        case 2:\n          fn.call(fn._E_ctx, arg1, arg2);\n          break;\n        case 3:\n          fn.call(fn._E_ctx, arg1, arg2, arg3);\n          break;\n        case 4:\n          fn.call(fn._E_ctx, arg1, arg2, arg3, arg4);\n          break;\n        default:\n          fn.apply(fn._E_ctx, args);\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Remove event listeners.\n   *\n   * @param {string}   event  The event to remove.\n   * @param {function} fn     The listener that we need to find.\n   * @return {Evemit} Current instance.\n   * @api public\n   */\n  Evemit.prototype.off = function(event, fn) {\n\n    if (!this.events[event]) {\n      return this;\n    }\n\n    for (var i = 0, ln = this.events[event].length; i < ln; i++) {\n\n      if (this.events[event][i] === fn) {\n\n        this.events[event][i] = null;\n        delete this.events[event][i];\n      }\n    }\n\n    // re-index\n    this.events[event] = this.events[event].filter(function(ltns) {\n      return typeof ltns !== 'undefined';\n    });\n\n    return this;\n  };\n\n  /**\n   * Get a list of assigned event listeners.\n   *\n   * @param {string} [event] The events that should be listed.\n   * If not provided, all listeners are returned.\n   * Use the property `Evemit.events` if you want to get an object like\n   * ```\n   * {event1: [array of listeners], event2: [array of listeners], ...}\n   * ```\n   *\n   * @return {array}\n   * @api public\n   */\n  Evemit.prototype.listeners = function(event) {\n    var evs, ltns;\n\n    if(event) {\n      return this.events[event] || [];\n    }\n\n    evs  = this.events;\n    ltns = [];\n\n    for(var ev in evs) {\n      ltns = ltns.concat(evs[ev].valueOf());\n    }\n\n    return ltns;\n  };\n\n  /**\n   * Expose Evemit\n   * @type {Evemit}\n   */\n  if(typeof module !== 'undefined' && module.exports) {\n    module.exports = Evemit;\n  } else {\n    window.Evemit = Evemit;\n  }\n\n})();\n\n},{}],3:[function(require,module,exports){\n//fgnass.github.com/spin.js#v1.2.5\n/**\n * Copyright (c) 2011 Felix Gnass [fgnass at neteye dot de]\n * Licensed under the MIT license\n */\n\nvar prefixes = ['webkit', 'Moz', 'ms', 'O']; /* Vendor prefixes */\nvar animations = {}; /* Animation rules keyed by their name */\nvar useCssAnimations;\n\n/**\n * Utility function to create elements. If no tag name is given,\n * a DIV is created. Optionally properties can be passed.\n */\nfunction createEl(tag, prop) {\n  var el = document.createElement(tag || 'div');\n  var n;\n\n  for(n in prop) {\n    el[n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Appends children and returns the parent.\n */\nfunction ins(parent /* child1, child2, ...*/) {\n  for (var i=1, n=arguments.length; i<n; i++) {\n    parent.appendChild(arguments[i]);\n  }\n  return parent;\n}\n\n/**\n * Insert a new stylesheet to hold the @keyframe or VML rules.\n */\nvar sheet = function() {\n  var el = createEl('style');\n  ins(document.getElementsByTagName('head')[0], el);\n  return el.sheet || el.styleSheet;\n}();\n\n/**\n * Creates an opacity keyframe animation rule and returns its name.\n * Since most mobile Webkits have timing issues with animation-delay,\n * we create separate rules for each line/segment.\n */\nfunction addAnimation(alpha, trail, i, lines) {\n  var name = ['opacity', trail, ~~(alpha*100), i, lines].join('-');\n  var start = 0.01 + i/lines*100;\n  var z = Math.max(1-(1-alpha)/trail*(100-start) , alpha);\n  var prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase();\n  var pre = prefix && '-'+prefix+'-' || '';\n\n  if (!animations[name]) {\n    sheet.insertRule(\n      '@' + pre + 'keyframes ' + name + '{' +\n      '0%{opacity:'+z+'}' +\n      start + '%{opacity:'+ alpha + '}' +\n      (start+0.01) + '%{opacity:1}' +\n      (start+trail)%100 + '%{opacity:'+ alpha + '}' +\n      '100%{opacity:'+ z + '}' +\n      '}', 0);\n    animations[name] = 1;\n  }\n  return name;\n}\n\n/**\n * Tries various vendor prefixes and returns the first supported property.\n **/\nfunction vendor(el, prop) {\n  var s = el.style;\n  var pp;\n  var i;\n\n  if(s[prop] !== undefined) return prop;\n  prop = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for(i=0; i<prefixes.length; i++) {\n    pp = prefixes[i]+prop;\n    if(s[pp] !== undefined) return pp;\n  }\n}\n\n/**\n * Sets multiple style properties at once.\n */\nfunction css(el, prop) {\n  for (var n in prop) {\n    el.style[vendor(el, n)||n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Fills in default values.\n */\nfunction merge(obj) {\n  for (var i=1; i < arguments.length; i++) {\n    var def = arguments[i];\n    for (var n in def) {\n      if (obj[n] === undefined) obj[n] = def[n];\n    }\n  }\n  return obj;\n}\n\n/**\n * Returns the absolute page-offset of the given element.\n */\nfunction pos(el) {\n  var o = {x:el.offsetLeft, y:el.offsetTop};\n  while((el = el.offsetParent)) {\n    o.x+=el.offsetLeft;\n    o.y+=el.offsetTop;\n  }\n  return o;\n}\n\nvar defaults = {\n  lines: 12,            // The number of lines to draw\n  length: 7,            // The length of each line\n  width: 5,             // The line thickness\n  radius: 10,           // The radius of the inner circle\n  rotate: 0,            // rotation offset\n  color: '#000',        // #rgb or #rrggbb\n  speed: 1,             // Rounds per second\n  trail: 100,           // Afterglow percentage\n  opacity: 1/4,         // Opacity of the lines\n  fps: 20,              // Frames per second when using setTimeout()\n  zIndex: 2e9,          // Use a high z-index by default\n  className: 'spinner', // CSS class to assign to the element\n  top: 'auto',          // center vertically\n  left: 'auto'          // center horizontally\n};\n\n/** The constructor */\nvar Spinner = function Spinner(o) {\n  if (!this.spin) return new Spinner(o);\n  this.opts = merge(o || {}, Spinner.defaults, defaults);\n};\n\nSpinner.defaults = {};\nmerge(Spinner.prototype, {\n  spin: function(target) {\n    this.stop();\n    var self = this;\n    var o = self.opts;\n    var el = self.el = css(createEl(0, {className: o.className}), {position: 'relative', zIndex: o.zIndex});\n    var mid = o.radius+o.length+o.width;\n    var ep; // element position\n    var tp; // target position\n\n    if (target) {\n      target.insertBefore(el, target.firstChild||null);\n      tp = pos(target);\n      ep = pos(el);\n      css(el, {\n        left: (o.left == 'auto' ? tp.x-ep.x + (target.offsetWidth >> 1) : o.left+mid) + 'px',\n        top: (o.top == 'auto' ? tp.y-ep.y + (target.offsetHeight >> 1) : o.top+mid)  + 'px'\n      });\n    }\n\n    el.setAttribute('aria-role', 'progressbar');\n    self.lines(el, self.opts);\n\n    if (!useCssAnimations) {\n      // No CSS animation support, use setTimeout() instead\n      var i = 0;\n      var fps = o.fps;\n      var f = fps/o.speed;\n      var ostep = (1-o.opacity)/(f*o.trail / 100);\n      var astep = f/o.lines;\n\n      !function anim() {\n        i++;\n        for (var s=o.lines; s; s--) {\n          var alpha = Math.max(1-(i+s*astep)%f * ostep, o.opacity);\n          self.opacity(el, o.lines-s, alpha, o);\n        }\n        self.timeout = self.el && setTimeout(anim, ~~(1000/fps));\n      }();\n    }\n    return self;\n  },\n  stop: function() {\n    var el = this.el;\n    if (el) {\n      clearTimeout(this.timeout);\n      if (el.parentNode) el.parentNode.removeChild(el);\n      this.el = undefined;\n    }\n    return this;\n  },\n  lines: function(el, o) {\n    var i = 0;\n    var seg;\n\n    function fill(color, shadow) {\n      return css(createEl(), {\n        position: 'absolute',\n        width: (o.length+o.width) + 'px',\n        height: o.width + 'px',\n        background: color,\n        boxShadow: shadow,\n        transformOrigin: 'left',\n        transform: 'rotate(' + ~~(360/o.lines*i+o.rotate) + 'deg) translate(' + o.radius+'px' +',0)',\n        borderRadius: (o.width>>1) + 'px'\n      });\n    }\n    for (; i < o.lines; i++) {\n      seg = css(createEl(), {\n        position: 'absolute',\n        top: 1+~(o.width/2) + 'px',\n        transform: o.hwaccel ? 'translate3d(0,0,0)' : '',\n        opacity: o.opacity,\n        animation: useCssAnimations && addAnimation(o.opacity, o.trail, i, o.lines) + ' ' + 1/o.speed + 's linear infinite'\n      });\n      if (o.shadow) ins(seg, css(fill('#000', '0 0 4px ' + '#000'), {top: 2+'px'}));\n      ins(el, ins(seg, fill(o.color, '0 0 1px rgba(0,0,0,.1)')));\n    }\n    return el;\n  },\n  opacity: function(el, i, val) {\n    if (i < el.childNodes.length) el.childNodes[i].style.opacity = val;\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////\n// VML rendering for IE\n/////////////////////////////////////////////////////////////////////////\n\n/**\n * Check and init VML support\n */\n!function() {\n\n  function vml(tag, attr) {\n    return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr);\n  }\n\n  var s = css(createEl('group'), {behavior: 'url(#default#VML)'});\n\n  if (!vendor(s, 'transform') && s.adj) {\n\n    // VML support detected. Insert CSS rule ...\n    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');\n\n    Spinner.prototype.lines = function(el, o) {\n      var r = o.length+o.width;\n      var s = 2*r;\n\n      function grp() {\n        return css(vml('group', {coordsize: s +' '+s, coordorigin: -r +' '+-r}), {width: s, height: s});\n      }\n\n      var margin = -(o.width+o.length)*2+'px';\n      var g = css(grp(), {position: 'absolute', top: margin, left: margin});\n\n      var i;\n\n      function seg(i, dx, filter) {\n        ins(g,\n          ins(css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx}),\n            ins(css(vml('roundrect', {arcsize: 1}), {\n                width: r,\n                height: o.width,\n                left: o.radius,\n                top: -o.width>>1,\n                filter: filter\n              }),\n              vml('fill', {color: o.color, opacity: o.opacity}),\n              vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n            )\n          )\n        );\n      }\n\n      if (o.shadow) {\n        for (i = 1; i <= o.lines; i++) {\n          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');\n        }\n      }\n      for (i = 1; i <= o.lines; i++) seg(i);\n      return ins(el, g);\n    };\n    Spinner.prototype.opacity = function(el, i, val, o) {\n      var c = el.firstChild;\n      o = o.shadow && o.lines || 0;\n      if (c && i+o < c.childNodes.length) {\n        c = c.childNodes[i+o]; c = c && c.firstChild; c = c && c.firstChild;\n        if (c) c.opacity = val;\n      }\n    };\n  }\n  else {\n    useCssAnimations = vendor(s, 'animation');\n  }\n}();\n\nmodule.exports = Spinner;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatData;\n/**\n * Build the structure of Grouped Bar Data.\n *\n * @param {array} data\n * @param {obj} Filter key for data\n * @return {obj} containing two arrays\n */\nfunction formatData(data, rowFilters) {\n  rowFilters.forEach(function (obj) {\n    data = data.filter(function (row) {\n      return row[obj.id] == obj.value;\n    });\n  });\n\n  var obese = data.filter(function (row) {\n    return row['metric'] == 'obese';\n  });\n  var overWeight = data.filter(function (row) {\n    return row['metric'] == 'overweight';\n  });\n\n  obese = isolateDataSections(obese);\n  overWeight = isolateDataSections(overWeight);\n  return { 'obesity': obese, 'overweight': overWeight };\n}\n/**\n * Filters certain age groups out data\n * returns only the fields of interest\n *\n * @param {array}\n * @return {array}\n */\nfunction isolateDataSections(arra) {\n  var data = ['8', '9', '10'].map(function (id) {\n    return arra.filter(function (row) {\n      return row['age_group_id'] == id;\n    });\n  });\n  return data.map(function (obj) {\n    var arra = [];\n    obj.forEach(function (innerObj) {\n      ['1', '2'].forEach(function (sexType) {\n        if (innerObj.sex_id == sexType) {\n          var _obj = {};\n          _obj.name = innerObj.age_group;\n          _obj.value = innerObj.mean * 100; // make it a percent %\n          _obj.sex = innerObj.sex;\n          _obj.metric = innerObj.metric;\n          _obj.fill = sexType == 1 ? '#8A89A6' : '#D0743C';\n          arra.push(_obj);\n        }\n      });\n    });\n    return arra;\n  });\n}\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _evemit = require('evemit');\n\nvar _evemit2 = _interopRequireDefault(_evemit);\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dom = function (_Evemit) {\n  _inherits(Dom, _Evemit);\n\n  function Dom() {\n    _classCallCheck(this, Dom);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Dom).apply(this, arguments));\n  }\n\n  _createClass(Dom, [{\n    key: 'constuctor',\n\n    /**\n     * @constructor\n     *\n     * @param {void}\n     * @return {void}\n     */\n    value: function constuctor() {}\n\n    /**\n     * sets window resize emitter\n     *\n     * @param {string} id for case\n     * @param {el}  text for current Chart header\n     * @return {void}\n     */\n\n  }, {\n    key: 'init',\n    value: function init(visCaseId, text) {\n      var _this2 = this;\n\n      this.visCase = this.appendCaseToBody(visCaseId);\n      this.createHeader(this.visCase, text);\n      this.buildToggle(this.visCase);\n      window.onresize = function () {\n        _this2.emit('resize');\n      };\n    }\n\n    /**\n     * Creates element in body\n     *\n     * @param {string} id & class\n     * @return {el}\n     */\n\n  }, {\n    key: 'appendCaseToBody',\n    value: function appendCaseToBody(id) {\n      var body = document.getElementsByTagName('body')[0];\n      var visCase = document.createElement('div');\n\n      visCase.className = id;\n      visCase.id = id;\n      body.appendChild(visCase);\n      return visCase;\n    }\n    /**\n     * Creates header in case\n     *\n     * @param {el}\n     * @param {string} text of the element\n     * @return {void}\n     */\n\n  }, {\n    key: 'createHeader',\n    value: function createHeader(el, text) {\n      var chartHeader = void 0;\n\n      chartHeader = document.createElement('h3');\n      chartHeader.className = 'chart-header-text';\n      chartHeader.innerHTML = text + ' (pct)';\n\n      el.appendChild(chartHeader);\n    }\n    /**\n     * Creats two toggle buttons\n     *\n     * @param {el}\n     * @return {void}\n     */\n\n  }, {\n    key: 'buildToggle',\n    value: function buildToggle(el) {\n      var _this3 = this;\n\n      var btnObese = void 0,\n          btnOverweight = void 0,\n          buttonCase = void 0;\n\n      buttonCase = document.createElement('div');\n      buttonCase.className = 'toggle-btn-case';\n\n      btnObese = document.createElement('button');\n      btnObese.className = 'data-toggle-btn active';\n      btnObese.id = 'obesity-btn';\n      btnObese.innerHTML = 'Obesity';\n      btnObese.onclick = function (e) {\n        return _this3.emit('toggle-data', 'obesity');\n      };\n\n      btnOverweight = document.createElement('button');\n      btnOverweight.className = 'data-toggle-btn';\n      btnOverweight.id = 'overweight-btn';\n      btnOverweight.innerHTML = 'Overweight';\n      btnOverweight.onclick = function (e) {\n        return _this3.emit('toggle-data', 'overweight');\n      };\n\n      buttonCase.appendChild(btnObese);\n      buttonCase.appendChild(btnOverweight);\n\n      el.appendChild(buttonCase);\n    }\n\n    /**\n     * Toggle\n     *\n     * @param {string}\n     * @return {void}\n     */\n\n  }, {\n    key: 'toggleButtons',\n    value: function toggleButtons(key) {\n      _d2.default.select('.chart-header-text').text(key + ' (pct)');\n      _d2.default.selectAll('.data-toggle-btn').attr('class', 'data-toggle-btn');\n      _d2.default.selectAll('#' + key + '-btn').attr('class', 'data-toggle-btn active');\n    }\n  }]);\n\n  return Dom;\n}(_evemit2.default);\n\nexports.default = Dom;\n\n},{\"d3\":1,\"evemit\":2}],6:[function(require,module,exports){\n'use strict';\n\nvar _visualization = require('./visualizations/visualization');\n\nvar _visualization2 = _interopRequireDefault(_visualization);\n\nvar _GroupedBarGraph = require('./visualizations/GroupedBarGraph');\n\nvar _GroupedBarGraph2 = _interopRequireDefault(_GroupedBarGraph);\n\nvar _Dom = require('./dom/Dom');\n\nvar _Dom2 = _interopRequireDefault(_Dom);\n\nvar _dataFormatter = require('./dataFormatter');\n\nvar _dataFormatter2 = _interopRequireDefault(_dataFormatter);\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _evemit = require('evemit');\n\nvar _evemit2 = _interopRequireDefault(_evemit);\n\nvar _spin = require('spin');\n\nvar _spin2 = _interopRequireDefault(_spin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// keys\nvar rowfilters = [{ 'id': 'location_id', 'value': 102 }, { 'id': 'year', 'value': 2013 }];\nvar fills = [{ 'label': 'male', 'fill': '#8A89A6' }, { 'label': 'female', 'fill': '#D0743C' }];\nvar xScalekey = ['15 to 19 yrs', '20 to 24 yrs', '25 to 29 yrs'];\nvar xGroupArra = ['male', 'female'];\nvar targetID = 'chart-case';\n\n//modules\nvar ev = new _evemit2.default();\nvar spinner = new _spin2.default();\nvar visualization = new _visualization2.default(_GroupedBarGraph2.default, [xScalekey, xGroupArra]);\nvar dom = new _Dom2.default(targetID);\n\nvar data = void 0;\n\n// Window OnLoad Inits DOM Class and starts spinner\nwindow.onload = function () {\n  var target = document.getElementById('spinner');\n  spinner.spin(target);\n};\n\n// On Window Resize.. update()\ndom.on('resize', function () {\n  visualization.resize();\n  visualization.updateData(data, visualization.dataType);\n});\n\n// After data loads...\n// Spinner stops, toggle buttons are created\n// Chart is created\nev.on('data-loaded', function (res, key) {\n\n  dom.init(targetID, 'obesity');\n\n  data = (0, _dataFormatter2.default)(res, rowfilters, fills); // make data global\n\n  spinner.stop(); //remove spin\n\n  visualization.init(targetID, fills);\n  visualization.updateData(data, 'obesity');\n});\n\n// Update data on toggle\ndom.on('toggle-data', function (key) {\n  visualization.updateData(data, key);\n  dom.toggleButtons(key);\n});\n\n// Pull data and emit when retrieved\n_d2.default.csv('/api/data.csv', function (error, res) {\n  if (error) {\n    throw error;\n  }\n  ev.emit('data-loaded', res);\n});\n\n},{\"./dataFormatter\":4,\"./dom/Dom\":5,\"./visualizations/GroupedBarGraph\":7,\"./visualizations/visualization\":9,\"d3\":1,\"evemit\":2,\"spin\":3}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _chart = require('./chart');\n\nvar _chart2 = _interopRequireDefault(_chart);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GroupedBarChart = function (_Chart) {\n  _inherits(GroupedBarChart, _Chart);\n\n  /**\n   * @constructor\n   *\n   * @param {el}\n   * @return {void}\n   */\n\n  function GroupedBarChart(svg) {\n    _classCallCheck(this, GroupedBarChart);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(GroupedBarChart).call(this, svg));\n\n    _this.init();\n    return _this;\n  }\n  /**\n   * append group to svg\n   *\n   * @param {void}\n   * @return {void}\n   */\n\n\n  _createClass(GroupedBarChart, [{\n    key: 'init',\n    value: function init() {\n      this.chart = this.svg.append('g').attr('class', 'group grouped-bar-graph');\n    }\n    /**\n     * create x scale for axis\n     *\n     * @param {array} outter x domain\n     * @param {array} inner x domain\n     * @return {obj} X scale obj\n     */\n\n  }, {\n    key: 'createScaleX',\n    value: function createScaleX(outter, inner) {\n      var x = {};\n\n      x.main = _d2.default.scale.ordinal().domain(outter).rangeRoundBands([0, this.chartWidth], .3);\n\n      x.bar = _d2.default.scale.ordinal().domain(inner).rangeRoundBands([0, x.main.rangeBand()]);\n\n      return x;\n    }\n\n    /**\n     * create y scale for axis\n     *\n     * @param {number}\n     * @return {obj} y-scale\n     */\n\n  }, {\n    key: 'createScaleY',\n    value: function createScaleY(max) {\n      var y = void 0;\n      y = _d2.default.scale.linear().range([this.chartHeight, 0]);\n\n      y.domain([0, max]);\n\n      return y;\n    }\n\n    /**\n     * create axis\n     *\n     * @param {obj} scales\n     * @return {obj} axis\n     */\n\n  }, {\n    key: 'createAxis',\n    value: function createAxis(scales) {\n      var axis = {};\n\n      axis.y = _d2.default.svg.axis().scale(scales.y).orient('left');\n\n      axis.x = _d2.default.svg.axis().scale(scales.x.main).orient('bottom');\n\n      return axis;\n    }\n\n    /**\n     * create cases for grouped bars\n     *\n     * @param {arra} bar-group data\n     * @return {obj} x-axis scale\n     */\n\n  }, {\n    key: 'buildGroups',\n    value: function buildGroups(groups, xAxisScale) {\n      groups = this.chart.selectAll('.age-group').data(groups).enter().append('g').attr('class', 'age-group').attr('transform', function (d) {\n        return 'translate(' + xAxisScale(d[0].name) + ',0)';\n      });\n\n      return groups;\n    }\n\n    /**\n     * draw axis outline\n     *\n     * @param {obj} contains xy scales\n     * @return {void}\n     */\n\n  }, {\n    key: 'buildChartOutline',\n    value: function buildChartOutline(axis) {\n      this.chart.attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')').attr('height', this.chartHeight).attr('width', this.chartWidth);\n\n      this.chart.append('g').attr('class', 'x axis').attr('transform', 'translate(0,' + (this.chartHeight + 10) + ')').call(axis.x);\n\n      this.chart.append('g').attr('class', 'y axis').call(axis.y);\n    }\n    /**\n     * draw bars\n     *\n     * @param {obj} contains xy scales\n     * @param {el} axis\n     * @return {void}\n     */\n\n  }, {\n    key: 'buildBars',\n    value: function buildBars(scales, groups) {\n      var _this2 = this;\n\n      groups.selectAll('rect').data(function (d) {\n        return d;\n      }).enter().append('rect').attr('class', function (d) {\n        return d.sex;\n      }).attr('width', scales.x.bar.rangeBand()).attr('x', function (d) {\n        return scales.x.bar(d.sex);\n      }).attr('y', function (d) {\n        return scales.y(d.value);\n      }).attr('height', function (d) {\n        return _this2.chartHeight - scales.y(d.value);\n      }).attr('fill', function (d) {\n        return d.fill;\n      });\n    }\n    /**\n     * Get max value from nested arra\n     *\n     * @param {arra}\n     * @return {number}\n     */\n\n  }, {\n    key: 'getMax',\n    value: function getMax(data) {\n      return _d2.default.max(data.map(function (arra) {\n        return _d2.default.max(arra.map(function (d) {\n          return d.value;\n        }));\n      }));\n    }\n  }]);\n\n  return GroupedBarChart;\n}(_chart2.default);\n\nexports.default = GroupedBarChart;\n\n},{\"./chart\":8,\"d3\":1}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Chart = function () {\n  /**\n   * @constructor\n   *\n   * @param {el}\n   * @return {void}\n   */\n\n  function Chart(svg) {\n    _classCallCheck(this, Chart);\n\n    this.svg = svg;\n    this.dimensions = this.getDimensions(this.svg);\n  }\n  /**\n   * Sets dimensions\n   *\n   * @param {el}\n   * @return {void}\n   */\n\n\n  _createClass(Chart, [{\n    key: 'getDimensions',\n    value: function getDimensions(el) {\n\n      var height = parseFloat(el.style('height').replace(/px/, ''));\n      var width = parseFloat(el.style('width').replace(/px/, ''));\n\n      this.margin = { top: 100, right: 40, bottom: 60, left: 40 };\n      this.chartWidth = width - this.margin.left - this.margin.right;\n      this.chartHeight = height - this.margin.top - this.margin.bottom;\n    }\n  }]);\n\n  return Chart;\n}();\n\nexports.default = Chart;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar vizCache = {};\n\nvar Visualization = function () {\n  /**\n   * @constructor\n   * @param {obj} chart module\n   * @param {array} x scale key\n   * @param {group} x scale key\n   * @return {void}\n   */\n\n  function Visualization(vis, xScaleKey) {\n    _classCallCheck(this, Visualization);\n\n    this.visType = vis;\n    this.xScaleKey = xScaleKey;\n  }\n\n  /**\n   * Appends a SVG and gives it dimensions\n   *\n   * @param {string} case for vizualization\n   * @return {void}\n   */\n\n\n  _createClass(Visualization, [{\n    key: 'init',\n    value: function init(caseID, fills) {\n      var dimensions = void 0;\n\n      this.vizCase = _d2.default.select('#' + caseID);\n      this.svg = this.vizCase.append('svg');\n      // this.svg.call(fills[0].fill);\n      // this.svg.call(fills[1].fill);\n\n      dimensions = this.getDimensions(this.vizCase);\n      this.setDimensions(this.svg, dimensions);\n      this.renderChart(this.visType);\n      this.createLegend(fills, dimensions[0]);\n    }\n\n    /**\n     * Dimension Getter\n     *\n     * @param {el}\n     * @return {array} Dimension array\n     */\n\n  }, {\n    key: 'getDimensions',\n    value: function getDimensions(el) {\n      var width = parseFloat(el.style('width').replace(/px/, ''));\n      var height = width * 0.6;\n\n      return [width, height];\n    }\n\n    /**\n     * Dimension Setter\n     *\n     * @param {el}\n     * @param {array} width && height\n     * @return {void}\n     */\n\n  }, {\n    key: 'setDimensions',\n    value: function setDimensions(el, dimensions) {\n      el.attr('width', dimensions[0]).attr('height', dimensions[1]);\n    }\n\n    /**\n     * Build Vizualization\n     *\n     * @param {obj} Vizualization Type module\n     * @return {void}\n     */\n\n  }, {\n    key: 'renderChart',\n    value: function renderChart(vizType) {\n      this.viz = new vizType(this.svg);\n    }\n\n    /**\n     * clears cache and\n     * Sets new dimensions\n     *\n     * @param {void}\n     * @return {void}\n     */\n\n  }, {\n    key: 'resize',\n    value: function resize() {\n      vizCache = {};\n\n      this.setDimensions(this.svg, this.getDimensions(this.vizCase));\n      this.viz.getDimensions(this.viz.svg);\n    }\n\n    /**\n     * create legends\n     *\n     * @param {array}\n     * @param {string} width\n     * @return {void}\n     */\n\n  }, {\n    key: 'createLegend',\n    value: function createLegend(arra, width) {\n      var legend = this.svg.selectAll('.legend').data(arra).enter().append('g').attr('class', 'legend').attr('transform', function (d, i) {\n        return 'translate(0,' + i * 26 + ')';\n      });\n\n      legend.append('rect').attr('x', 90).attr('y', 20).attr('width', 18).attr('height', 18).style('fill', function (d) {\n        return d.fill;\n      });\n\n      legend.append('text').attr('x', 80).attr('y', 30).attr('dy', '.30em').style('text-anchor', 'end').text(function (d) {\n        return d.label;\n      });\n    }\n    /**\n     *\n     *\n     * @param {obj} data\n     * @param {string} obj key\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: 'updateData',\n    value: function updateData(data, key) {\n      var scales = {},\n          axis = void 0,\n          groups = void 0;\n      var chart = this.viz;\n\n      this.dataType = key;\n\n      if (!vizCache[key]) {\n        this.viz.chart.remove();\n        this.viz.init();\n        scales.y = chart.createScaleY(chart.getMax(data[key]));\n        scales.x = chart.createScaleX(this.xScaleKey[0], this.xScaleKey[1]);\n        axis = chart.createAxis(scales);\n\n        groups = chart.buildGroups(data[key], scales.x.main);\n        this.viz.buildChartOutline(axis);\n        chart.buildBars(scales, groups);\n        vizCache[key] = this.chart;\n      } else {\n        this.viz.chart.remove();\n        this.viz.chart = vizCache[key];\n        this.viz.svg.append(function () {\n          return vizCache[key].node();\n        });\n      }\n    }\n  }]);\n\n  return Visualization;\n}();\n\nexports.default = Visualization;\n\n},{\"d3\":1}]},{},[6])\n\n","/**\n * @name Evemit\n * @description Minimal and fast JavaScript event emitter for Node.js and front-end.\n * @author Nicolas Tallefourtane <dev@nicolab.net>\n * @link https://github.com/Nicolab/evemit\n * @license MIT https://github.com/Nicolab/evemit/blob/master/LICENSE\n */\n;(function() {\n\n  'use strict';\n\n  /**\n   * Evemit\n   *\n   * @constructor\n   * @api public\n   */\n  function Evemit() {\n    this.events = {};\n  }\n\n  /**\n   * Register a new event listener for a given event.\n   *\n   * @param {string}   event      Event name.\n   * @param {function} fn         Callback function (listener).\n   * @param {*}        [context]  Context for function execution.\n   * @return {Evemit} Current instance.\n   * @api public\n   */\n  Evemit.prototype.on = function(event, fn, context) {\n\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n\n    if(context) {\n      fn._E_ctx = context;\n    }\n\n    this.events[event].push(fn);\n\n    return this;\n  };\n\n  /**\n   * Add an event listener that's only called once.\n   *\n   * @param {string}    event      Event name.\n   * @param {function}  fn         Callback function (listener).\n   * @param {*}         [context]  Context for function execution.\n   * @return {Evemit} Current instance.\n   * @api public\n   */\n  Evemit.prototype.once = function(event, fn, context) {\n    fn._E_once = true;\n    return this.on(event, fn, context);\n  };\n\n  /**\n   * Emit an event to all registered event listeners.\n   *\n   * @param  {string} event      Event name.\n   * @param  {*}      [...arg]   One or more arguments to pass to the listeners.\n   * @return {bool} Indication, `true` if at least one listener was executed,\n   * otherwise returns `false`.\n   * @api public\n   */\n  Evemit.prototype.emit = function(event, arg1, arg2, arg3, arg4) {\n\n    var fn, evs, args, aLn;\n\n    if(!this.events[event]) {\n      return false;\n    }\n\n    args = Array.prototype.slice.call(arguments, 1);\n    aLn  = args.length;\n    evs  = this.events[event];\n\n    for(var i = 0, ln = evs.length; i < ln; i++) {\n\n      fn = evs[i];\n\n      if (fn._E_once) {\n        this.off(event, fn);\n      }\n\n      // Function.apply() is a bit slower, so try to do without\n      switch (aLn) {\n        case 0:\n          fn.call(fn._E_ctx);\n          break;\n        case 1:\n          fn.call(fn._E_ctx, arg1);\n          break;\n        case 2:\n          fn.call(fn._E_ctx, arg1, arg2);\n          break;\n        case 3:\n          fn.call(fn._E_ctx, arg1, arg2, arg3);\n          break;\n        case 4:\n          fn.call(fn._E_ctx, arg1, arg2, arg3, arg4);\n          break;\n        default:\n          fn.apply(fn._E_ctx, args);\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Remove event listeners.\n   *\n   * @param {string}   event  The event to remove.\n   * @param {function} fn     The listener that we need to find.\n   * @return {Evemit} Current instance.\n   * @api public\n   */\n  Evemit.prototype.off = function(event, fn) {\n\n    if (!this.events[event]) {\n      return this;\n    }\n\n    for (var i = 0, ln = this.events[event].length; i < ln; i++) {\n\n      if (this.events[event][i] === fn) {\n\n        this.events[event][i] = null;\n        delete this.events[event][i];\n      }\n    }\n\n    // re-index\n    this.events[event] = this.events[event].filter(function(ltns) {\n      return typeof ltns !== 'undefined';\n    });\n\n    return this;\n  };\n\n  /**\n   * Get a list of assigned event listeners.\n   *\n   * @param {string} [event] The events that should be listed.\n   * If not provided, all listeners are returned.\n   * Use the property `Evemit.events` if you want to get an object like\n   * ```\n   * {event1: [array of listeners], event2: [array of listeners], ...}\n   * ```\n   *\n   * @return {array}\n   * @api public\n   */\n  Evemit.prototype.listeners = function(event) {\n    var evs, ltns;\n\n    if(event) {\n      return this.events[event] || [];\n    }\n\n    evs  = this.events;\n    ltns = [];\n\n    for(var ev in evs) {\n      ltns = ltns.concat(evs[ev].valueOf());\n    }\n\n    return ltns;\n  };\n\n  /**\n   * Expose Evemit\n   * @type {Evemit}\n   */\n  if(typeof module !== 'undefined' && module.exports) {\n    module.exports = Evemit;\n  } else {\n    window.Evemit = Evemit;\n  }\n\n})();\n","//fgnass.github.com/spin.js#v1.2.5\n/**\n * Copyright (c) 2011 Felix Gnass [fgnass at neteye dot de]\n * Licensed under the MIT license\n */\n\nvar prefixes = ['webkit', 'Moz', 'ms', 'O']; /* Vendor prefixes */\nvar animations = {}; /* Animation rules keyed by their name */\nvar useCssAnimations;\n\n/**\n * Utility function to create elements. If no tag name is given,\n * a DIV is created. Optionally properties can be passed.\n */\nfunction createEl(tag, prop) {\n  var el = document.createElement(tag || 'div');\n  var n;\n\n  for(n in prop) {\n    el[n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Appends children and returns the parent.\n */\nfunction ins(parent /* child1, child2, ...*/) {\n  for (var i=1, n=arguments.length; i<n; i++) {\n    parent.appendChild(arguments[i]);\n  }\n  return parent;\n}\n\n/**\n * Insert a new stylesheet to hold the @keyframe or VML rules.\n */\nvar sheet = function() {\n  var el = createEl('style');\n  ins(document.getElementsByTagName('head')[0], el);\n  return el.sheet || el.styleSheet;\n}();\n\n/**\n * Creates an opacity keyframe animation rule and returns its name.\n * Since most mobile Webkits have timing issues with animation-delay,\n * we create separate rules for each line/segment.\n */\nfunction addAnimation(alpha, trail, i, lines) {\n  var name = ['opacity', trail, ~~(alpha*100), i, lines].join('-');\n  var start = 0.01 + i/lines*100;\n  var z = Math.max(1-(1-alpha)/trail*(100-start) , alpha);\n  var prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase();\n  var pre = prefix && '-'+prefix+'-' || '';\n\n  if (!animations[name]) {\n    sheet.insertRule(\n      '@' + pre + 'keyframes ' + name + '{' +\n      '0%{opacity:'+z+'}' +\n      start + '%{opacity:'+ alpha + '}' +\n      (start+0.01) + '%{opacity:1}' +\n      (start+trail)%100 + '%{opacity:'+ alpha + '}' +\n      '100%{opacity:'+ z + '}' +\n      '}', 0);\n    animations[name] = 1;\n  }\n  return name;\n}\n\n/**\n * Tries various vendor prefixes and returns the first supported property.\n **/\nfunction vendor(el, prop) {\n  var s = el.style;\n  var pp;\n  var i;\n\n  if(s[prop] !== undefined) return prop;\n  prop = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for(i=0; i<prefixes.length; i++) {\n    pp = prefixes[i]+prop;\n    if(s[pp] !== undefined) return pp;\n  }\n}\n\n/**\n * Sets multiple style properties at once.\n */\nfunction css(el, prop) {\n  for (var n in prop) {\n    el.style[vendor(el, n)||n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Fills in default values.\n */\nfunction merge(obj) {\n  for (var i=1; i < arguments.length; i++) {\n    var def = arguments[i];\n    for (var n in def) {\n      if (obj[n] === undefined) obj[n] = def[n];\n    }\n  }\n  return obj;\n}\n\n/**\n * Returns the absolute page-offset of the given element.\n */\nfunction pos(el) {\n  var o = {x:el.offsetLeft, y:el.offsetTop};\n  while((el = el.offsetParent)) {\n    o.x+=el.offsetLeft;\n    o.y+=el.offsetTop;\n  }\n  return o;\n}\n\nvar defaults = {\n  lines: 12,            // The number of lines to draw\n  length: 7,            // The length of each line\n  width: 5,             // The line thickness\n  radius: 10,           // The radius of the inner circle\n  rotate: 0,            // rotation offset\n  color: '#000',        // #rgb or #rrggbb\n  speed: 1,             // Rounds per second\n  trail: 100,           // Afterglow percentage\n  opacity: 1/4,         // Opacity of the lines\n  fps: 20,              // Frames per second when using setTimeout()\n  zIndex: 2e9,          // Use a high z-index by default\n  className: 'spinner', // CSS class to assign to the element\n  top: 'auto',          // center vertically\n  left: 'auto'          // center horizontally\n};\n\n/** The constructor */\nvar Spinner = function Spinner(o) {\n  if (!this.spin) return new Spinner(o);\n  this.opts = merge(o || {}, Spinner.defaults, defaults);\n};\n\nSpinner.defaults = {};\nmerge(Spinner.prototype, {\n  spin: function(target) {\n    this.stop();\n    var self = this;\n    var o = self.opts;\n    var el = self.el = css(createEl(0, {className: o.className}), {position: 'relative', zIndex: o.zIndex});\n    var mid = o.radius+o.length+o.width;\n    var ep; // element position\n    var tp; // target position\n\n    if (target) {\n      target.insertBefore(el, target.firstChild||null);\n      tp = pos(target);\n      ep = pos(el);\n      css(el, {\n        left: (o.left == 'auto' ? tp.x-ep.x + (target.offsetWidth >> 1) : o.left+mid) + 'px',\n        top: (o.top == 'auto' ? tp.y-ep.y + (target.offsetHeight >> 1) : o.top+mid)  + 'px'\n      });\n    }\n\n    el.setAttribute('aria-role', 'progressbar');\n    self.lines(el, self.opts);\n\n    if (!useCssAnimations) {\n      // No CSS animation support, use setTimeout() instead\n      var i = 0;\n      var fps = o.fps;\n      var f = fps/o.speed;\n      var ostep = (1-o.opacity)/(f*o.trail / 100);\n      var astep = f/o.lines;\n\n      !function anim() {\n        i++;\n        for (var s=o.lines; s; s--) {\n          var alpha = Math.max(1-(i+s*astep)%f * ostep, o.opacity);\n          self.opacity(el, o.lines-s, alpha, o);\n        }\n        self.timeout = self.el && setTimeout(anim, ~~(1000/fps));\n      }();\n    }\n    return self;\n  },\n  stop: function() {\n    var el = this.el;\n    if (el) {\n      clearTimeout(this.timeout);\n      if (el.parentNode) el.parentNode.removeChild(el);\n      this.el = undefined;\n    }\n    return this;\n  },\n  lines: function(el, o) {\n    var i = 0;\n    var seg;\n\n    function fill(color, shadow) {\n      return css(createEl(), {\n        position: 'absolute',\n        width: (o.length+o.width) + 'px',\n        height: o.width + 'px',\n        background: color,\n        boxShadow: shadow,\n        transformOrigin: 'left',\n        transform: 'rotate(' + ~~(360/o.lines*i+o.rotate) + 'deg) translate(' + o.radius+'px' +',0)',\n        borderRadius: (o.width>>1) + 'px'\n      });\n    }\n    for (; i < o.lines; i++) {\n      seg = css(createEl(), {\n        position: 'absolute',\n        top: 1+~(o.width/2) + 'px',\n        transform: o.hwaccel ? 'translate3d(0,0,0)' : '',\n        opacity: o.opacity,\n        animation: useCssAnimations && addAnimation(o.opacity, o.trail, i, o.lines) + ' ' + 1/o.speed + 's linear infinite'\n      });\n      if (o.shadow) ins(seg, css(fill('#000', '0 0 4px ' + '#000'), {top: 2+'px'}));\n      ins(el, ins(seg, fill(o.color, '0 0 1px rgba(0,0,0,.1)')));\n    }\n    return el;\n  },\n  opacity: function(el, i, val) {\n    if (i < el.childNodes.length) el.childNodes[i].style.opacity = val;\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////\n// VML rendering for IE\n/////////////////////////////////////////////////////////////////////////\n\n/**\n * Check and init VML support\n */\n!function() {\n\n  function vml(tag, attr) {\n    return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr);\n  }\n\n  var s = css(createEl('group'), {behavior: 'url(#default#VML)'});\n\n  if (!vendor(s, 'transform') && s.adj) {\n\n    // VML support detected. Insert CSS rule ...\n    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');\n\n    Spinner.prototype.lines = function(el, o) {\n      var r = o.length+o.width;\n      var s = 2*r;\n\n      function grp() {\n        return css(vml('group', {coordsize: s +' '+s, coordorigin: -r +' '+-r}), {width: s, height: s});\n      }\n\n      var margin = -(o.width+o.length)*2+'px';\n      var g = css(grp(), {position: 'absolute', top: margin, left: margin});\n\n      var i;\n\n      function seg(i, dx, filter) {\n        ins(g,\n          ins(css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx}),\n            ins(css(vml('roundrect', {arcsize: 1}), {\n                width: r,\n                height: o.width,\n                left: o.radius,\n                top: -o.width>>1,\n                filter: filter\n              }),\n              vml('fill', {color: o.color, opacity: o.opacity}),\n              vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n            )\n          )\n        );\n      }\n\n      if (o.shadow) {\n        for (i = 1; i <= o.lines; i++) {\n          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');\n        }\n      }\n      for (i = 1; i <= o.lines; i++) seg(i);\n      return ins(el, g);\n    };\n    Spinner.prototype.opacity = function(el, i, val, o) {\n      var c = el.firstChild;\n      o = o.shadow && o.lines || 0;\n      if (c && i+o < c.childNodes.length) {\n        c = c.childNodes[i+o]; c = c && c.firstChild; c = c && c.firstChild;\n        if (c) c.opacity = val;\n      }\n    };\n  }\n  else {\n    useCssAnimations = vendor(s, 'animation');\n  }\n}();\n\nmodule.exports = Spinner;\n","/**\n * Build the structure of Grouped Bar Data.\n *\n * @param {array} data\n * @param {obj} Filter key for data\n * @return {obj} containing two arrays\n */\nexport default function formatData(data, rowFilters) {\n  rowFilters.forEach(function(obj) {\n    data = data.filter(function(row) {\n      return row[obj.id] == obj.value;\n    });\n  });\n\n  let obese = data.filter(function(row) { return row['metric'] == 'obese';});\n  let overWeight =  data.filter(function(row) { return row['metric'] == 'overweight';});\n\n  obese = isolateDataSections(obese);\n  overWeight = isolateDataSections(overWeight);\n  return {'obesity': obese, 'overweight': overWeight};\n}\n/**\n * Filters certain age groups out data\n * returns only the fields of interest\n *\n * @param {array}\n * @return {array}\n */\nfunction isolateDataSections(arra) {\n  let data = ['8', '9', '10'].map(function(id) {\n    return arra.filter(function(row){\n      return row['age_group_id'] == id;\n    });\n  });\n  return data.map(function(obj) {\n    let arra = [];\n    obj.forEach(function(innerObj) {\n      ['1', '2'].forEach(function(sexType) {\n        if(innerObj.sex_id == sexType) {\n          let obj = {};\n          obj.name = innerObj.age_group;\n          obj.value = innerObj.mean * 100; // make it a percent %\n          obj.sex = innerObj.sex;\n          obj.metric = innerObj.metric;\n          obj.fill = (sexType == 1 ? '#8A89A6' : '#D0743C');\n          arra.push(obj);\n        }\n      });\n    });\n    return arra;\n  });\n}\n\n","import Evemit from 'evemit';\nimport d3 from 'd3';\n\n\nexport default class Dom extends Evemit {\n  /**\n   * @constructor\n   *\n   * @param {void}\n   * @return {void}\n   */\n  constuctor() {}\n\n  /**\n   * sets window resize emitter\n   *\n   * @param {string} id for case\n   * @param {el}  text for current Chart header\n   * @return {void}\n   */\n  init(visCaseId, text) {\n    this.visCase = this.appendCaseToBody(visCaseId);\n    this.createHeader(this.visCase, text);\n    this.buildToggle(this.visCase);\n    window.onresize = () =>{ this.emit('resize');};\n  }\n\n  /**\n   * Creates element in body\n   *\n   * @param {string} id & class\n   * @return {el}\n   */\n  appendCaseToBody(id) {\n    let body = document.getElementsByTagName('body')[0];\n    let visCase = document.createElement('div');\n\n    visCase.className = id;\n    visCase.id = id;\n    body.appendChild(visCase);\n    return visCase;\n  }\n  /**\n   * Creates header in case\n   *\n   * @param {el}\n   * @param {string} text of the element\n   * @return {void}\n   */\n  createHeader(el, text) {\n    let chartHeader;\n\n    chartHeader = document.createElement('h3');\n    chartHeader.className = 'chart-header-text';\n    chartHeader.innerHTML = text + ' (pct)';\n\n    el.appendChild(chartHeader);\n  }\n  /**\n   * Creats two toggle buttons\n   *\n   * @param {el}\n   * @return {void}\n   */\n  buildToggle(el) {\n    let btnObese, btnOverweight, buttonCase;\n\n    buttonCase = document.createElement('div');\n    buttonCase.className = 'toggle-btn-case';\n\n    btnObese = document.createElement('button');\n    btnObese.className = 'data-toggle-btn active';\n    btnObese.id =  'obesity-btn';\n    btnObese.innerHTML = 'Obesity';\n    btnObese.onclick = (e) => this.emit('toggle-data',  'obesity');\n\n    btnOverweight = document.createElement('button');\n    btnOverweight.className = 'data-toggle-btn';\n    btnOverweight.id =  'overweight-btn';\n    btnOverweight.innerHTML = 'Overweight';\n    btnOverweight.onclick = (e) => this.emit('toggle-data', 'overweight');\n\n    buttonCase.appendChild(btnObese);\n    buttonCase.appendChild(btnOverweight);\n\n    el.appendChild(buttonCase);\n  }\n\n  /**\n   * Toggle\n   *\n   * @param {string}\n   * @return {void}\n   */\n  toggleButtons(key) {\n    d3.select('.chart-header-text').text(key + ' (pct)');\n    d3.selectAll('.data-toggle-btn').attr('class', 'data-toggle-btn');\n    d3.selectAll('#' + key + '-btn').attr('class', 'data-toggle-btn active');\n  }\n}","import Visualization from './visualizations/visualization';\nimport groupedBarGraph from './visualizations/GroupedBarGraph';\nimport DOM from './dom/Dom';\nimport formatData from './dataFormatter';\nimport d3 from 'd3';\nimport Evemit from 'evemit';\nimport Spinner from 'spin';\n\n// keys\nconst rowfilters = [{'id': 'location_id', 'value': 102}, {'id': 'year', 'value': 2013}];\nconst fills = [{'label':'male', 'fill': '#8A89A6'}, {'label':'female', 'fill': '#D0743C' }];\nconst xScalekey = ['15 to 19 yrs', '20 to 24 yrs', '25 to 29 yrs'];\nconst xGroupArra = ['male', 'female'];\nconst targetID = 'chart-case';\n\n//modules\nconst ev = new Evemit();\nconst spinner = new Spinner();\nconst visualization = new Visualization(groupedBarGraph, [xScalekey, xGroupArra]);\nconst dom = new DOM(targetID);\n\n\n\n\nlet data;\n\n// Window OnLoad Inits DOM Class and starts spinner\nwindow.onload = () => {\n  let target = document.getElementById('spinner');\n  spinner.spin(target);\n};\n\n// On Window Resize.. update()\ndom.on('resize', function() {\n  visualization.resize();\n  visualization.updateData(data, visualization.dataType);\n});\n\n// After data loads...\n// Spinner stops, toggle buttons are created\n// Chart is created\nev.on('data-loaded', function(res, key){\n\n  dom.init(targetID, 'obesity');\n\n  data = formatData(res, rowfilters, fills); // make data global\n\n  spinner.stop(); //remove spin\n\n  visualization.init(targetID, fills);\n  visualization.updateData(data, 'obesity');\n});\n\n// Update data on toggle\ndom.on('toggle-data', function(key) {\n  visualization.updateData(data, key);\n  dom.toggleButtons(key);\n});\n\n// Pull data and emit when retrieved\nd3.csv('/api/data.csv', function(error, res) {\n  if (error) {\n    throw error;\n  }\n  ev.emit('data-loaded', res);\n});","import d3 from 'd3';\nimport Chart from './chart';\n\nexport default class GroupedBarChart extends Chart {\n  /**\n   * @constructor\n   *\n   * @param {el}\n   * @return {void}\n   */\n  constructor(svg){\n    super(svg);\n    this.init();\n  }\n  /**\n   * append group to svg\n   *\n   * @param {void}\n   * @return {void}\n   */\n  init() {\n    this.chart = this.svg.append('g')\n      .attr('class', 'group grouped-bar-graph');\n  }\n  /**\n   * create x scale for axis\n   *\n   * @param {array} outter x domain\n   * @param {array} inner x domain\n   * @return {obj} X scale obj\n   */\n  createScaleX(outter, inner) {\n    let x = {};\n\n    x.main = d3.scale.ordinal()\n      .domain(outter)\n      .rangeRoundBands([0, this.chartWidth], .3);\n\n    x.bar = d3.scale.ordinal()\n      .domain(inner)\n      .rangeRoundBands([0, x.main.rangeBand()]);\n\n    return x;\n  }\n\n  /**\n   * create y scale for axis\n   *\n   * @param {number}\n   * @return {obj} y-scale\n   */\n  createScaleY(max) {\n    let y;\n    y = d3.scale.linear()\n      .range([this.chartHeight, 0]);\n\n    y.domain([0, max]);\n\n    return y;\n\n  }\n\n  /**\n   * create axis\n   *\n   * @param {obj} scales\n   * @return {obj} axis\n   */\n  createAxis(scales) {\n    let axis = {};\n\n    axis.y = d3.svg.axis()\n      .scale(scales.y)\n      .orient('left');\n\n    axis.x = d3.svg.axis()\n      .scale(scales.x.main)\n      .orient('bottom');\n\n    return axis;\n  }\n\n  /**\n   * create cases for grouped bars\n   *\n   * @param {arra} bar-group data\n   * @return {obj} x-axis scale\n   */\n  buildGroups(groups, xAxisScale) {\n    groups = this.chart.selectAll('.age-group')\n      .data(groups)\n      .enter().append('g')\n      .attr('class', 'age-group')\n      .attr('transform', function(d) { return 'translate(' + xAxisScale(d[0].name) + ',0)'; });\n\n    return groups;\n  }\n\n  /**\n   * draw axis outline\n   *\n   * @param {obj} contains xy scales\n   * @return {void}\n   */\n  buildChartOutline(axis) {\n    this.chart\n      .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')')\n      .attr('height', this.chartHeight)\n      .attr('width', this.chartWidth);\n\n    this.chart.append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + (this.chartHeight + 10) + ')')\n      .call(axis.x);\n\n    this.chart.append('g')\n      .attr('class', 'y axis')\n      .call(axis.y);\n  }\n  /**\n   * draw bars\n   *\n   * @param {obj} contains xy scales\n   * @param {el} axis\n   * @return {void}\n   */\n  buildBars(scales, groups) {\n    groups.selectAll('rect')\n      .data(function(d) { return d; })\n      .enter().append('rect')\n      .attr('class', function(d) {return d.sex;})\n      .attr('width', scales.x.bar.rangeBand())\n      .attr('x', function(d) { return scales.x.bar(d.sex); })\n      .attr('y', function(d) { return scales.y(d.value); })\n      .attr('height', (d) => { return this.chartHeight - scales.y(d.value); })\n      .attr('fill', function(d) {return d.fill; });\n  }\n  /**\n   * Get max value from nested arra\n   *\n   * @param {arra}\n   * @return {number}\n   */\n  getMax(data) {\n    return d3.max(\n      data.map(function(arra) {\n        return d3.max(\n          arra.map(function(d) {\n            return d.value;\n          })\n        );\n      })\n    );\n  }\n}","export default class Chart {\n  /**\n   * @constructor\n   *\n   * @param {el}\n   * @return {void}\n   */\n  constructor(svg) {\n    this.svg = svg;\n    this.dimensions = this.getDimensions(this.svg);\n  }\n  /**\n   * Sets dimensions\n   *\n   * @param {el}\n   * @return {void}\n   */\n  getDimensions(el) {\n\n    let height = parseFloat(el.style('height').replace(/px/, ''));\n    let width = parseFloat(el.style('width').replace(/px/, ''));\n\n    this.margin = {top: 100, right: 40, bottom: 60, left: 40};\n    this.chartWidth = width - this.margin.left - this.margin.right;\n    this.chartHeight = height - this.margin.top - this.margin.bottom;\n  }\n}","import d3 from 'd3';\n\nlet vizCache = {};\n\nexport default class Visualization  {\n  /**\n   * @constructor\n   * @param {obj} chart module\n   * @param {array} x scale key\n   * @param {group} x scale key\n   * @return {void}\n   */\n  constructor(vis, xScaleKey) {\n    this.visType = vis;\n    this.xScaleKey = xScaleKey;\n  }\n\n  /**\n   * Appends a SVG and gives it dimensions\n   *\n   * @param {string} case for vizualization\n   * @return {void}\n   */\n  init(caseID, fills) {\n    let dimensions;\n\n    this.vizCase = d3.select('#' + caseID);\n    this.svg = this.vizCase.append('svg');\n    // this.svg.call(fills[0].fill);\n    // this.svg.call(fills[1].fill);\n\n    dimensions = this.getDimensions(this.vizCase);\n    this.setDimensions(this.svg, dimensions);\n    this.renderChart(this.visType);\n    this.createLegend(fills, dimensions[0]);\n  }\n\n  /**\n   * Dimension Getter\n   *\n   * @param {el}\n   * @return {array} Dimension array\n   */\n  getDimensions(el) {\n    let width = parseFloat(el.style('width').replace(/px/, ''));\n    let height = width * 0.6;\n\n    return [width, height];\n  }\n\n  /**\n   * Dimension Setter\n   *\n   * @param {el}\n   * @param {array} width && height\n   * @return {void}\n   */\n  setDimensions(el, dimensions) {\n    el.attr('width', dimensions[0]).attr('height', dimensions[1]);\n  }\n\n  /**\n   * Build Vizualization\n   *\n   * @param {obj} Vizualization Type module\n   * @return {void}\n   */\n  renderChart(vizType) {\n    this.viz = new vizType(this.svg);\n  }\n\n  /**\n   * clears cache and\n   * Sets new dimensions\n   *\n   * @param {void}\n   * @return {void}\n   */\n  resize() {\n    vizCache = {};\n\n    this.setDimensions(this.svg, this.getDimensions(this.vizCase));\n    this.viz.getDimensions(this.viz.svg);\n  }\n\n  /**\n   * create legends\n   *\n   * @param {array}\n   * @param {string} width\n   * @return {void}\n   */\n  createLegend(arra, width) {\n    var legend = this.svg.selectAll('.legend')\n      .data(arra)\n      .enter().append('g')\n      .attr('class', 'legend')\n      .attr('transform', function(d, i) { return 'translate(0,' + i * 26 + ')'; });\n\n    legend.append('rect')\n      .attr('x', 90)\n      .attr('y', 20)\n      .attr('width', 18)\n      .attr('height', 18)\n      .style('fill', function(d){ return (d.fill); });\n\n    legend.append('text')\n      .attr('x', 80)\n      .attr('y', 30)\n      .attr('dy', '.30em')\n      .style('text-anchor', 'end')\n      .text(function(d) { return d.label; });\n  }\n  /**\n   *\n   *\n   * @param {obj} data\n   * @param {string} obj key\n   *\n   * @return {void}\n   */\n  updateData(data, key) {\n    let scales = {}, axis, groups;\n    let chart = this.viz;\n\n    this.dataType = key;\n\n    if(!vizCache[key]) {\n      this.viz.chart.remove();\n      this.viz.init();\n      scales.y = chart.createScaleY(chart.getMax(data[key]));\n      scales.x = chart.createScaleX(this.xScaleKey[0], this.xScaleKey[1]);\n      axis = chart.createAxis(scales);\n\n      groups = chart.buildGroups(data[key], scales.x.main);\n      this.viz.buildChartOutline(axis);\n      chart.buildBars(scales, groups);\n      vizCache[key] = this.chart;\n    } else {\n      this.viz.chart.remove();\n      this.viz.chart = vizCache[key];\n      this.viz.svg.append(() => { return vizCache[key].node();});\n    }\n  }\n}"],"sourceRoot":"/source/"}